find.package("devtools")
install.packages("devtools")
find.package("devtools")
library(devtools)
find_rtools()
install.packages("devtools")
install.packages("devtools")
find.package("devtools")
find.package("devtools")
install.package("KernSmooth")
install.package("KernSmooth")
install.package("KernSmooth")
find.package("kernsmooth")
find.package("devtools")
find.package(kernsmooth)
install.package("KernSmooth")
install.packages("KernSmooth")
install.package("KernSmooth")
find.package("kernsmooth")
install.packages("KernSmooth")
install.packages("KernSmooth")
install.packages("swirl")
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
play()
z
a<-c(z,555)
a
nxt()
play()
c(z,55,z)
nxt()
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq<-5,10,lenght=30)
my_seq<-seq(5,10,lenght=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
seq(1,length(my_seq)
)
1:lenght(my_seq)
1:length(my_seq)
seq(along-my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect<-c(0.5,55,10,6)
num_vect <- c(0.5,55,-10,6)
tf <-num_vect[num_vect<1]
tf <- num_vect < 1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char,collapse = " ")
my_name<-c(my_char, "Meles Anzeno")
my_name
paste(my_name," ")
paste(my_name,collapse=" ")
paste("Hello","world!",sep=" ")
paste(c(1:3),c("X","Y","Z"),sep="")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS, 1:4, sep = "-")
x<-c(44, NA, 5, NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[x==c(3,5,6)]
x[c(3,5,6)]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(foo)
vect(foo)
names(vect)
vect2<-c(11,2,NA)
names(vect)<-c("foo","bar","norf")
names(vect2)<-c("foo","bar","norf")
names(vect2)
names(vect)
identical(vect,vect2)
vect[2]
vect["bar"]
vect[c("foo","bar")]
my_vector<-c(1:20)
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vectory)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix()
?matrix
my_matrix2<-matrix(data = NA, nrow = 1, ncol = 1, byrow = FALSE,
dimnames = NULL)
my_matrix2<-matrix(data = 1:20, nrow = 4, ncol = 5)
identical(my_matrix,my_matrix2)
patients<- matrix(data = 1:20, nrow = 4, ncol = 5,byrow=TRUE,dimnames=list(c("Bill", "Gina", "Kelly","Sean")))
bye()
q()
getwd()
setwd("./GettingandCleaningData)
""
q()
q()
rowIndex <- 18:23
colIndx <- 7:15
dat <- read.xlsx(file="NaturalGasAquisition.xlsx",sheetIndex=1,colIndex=colIndx,startRow=18, endRow=23, header=TRUE)
getwd()
dat <- read.xlsx(file="C:\\Users\\manzeno\\Documents\\GettingandCleaningData\\NaturalGasAquisition.xlsx",sheetIndex=1,colIndex=colIndx,startRow=18, endRow=23, header=TRUE)
dat <- read.xlsx(file="C:\\Users\\manzeno\\Documents\\GettingandCleaningData\\NaturalGasAquisition.xlsx",sheetIndex=1,colIndex=colIndx,startRow=18, endRow=23, header=TRUE)
library(xlsx)
dat <- read.xlsx(file="C:\\Users\\manzeno\\Documents\\GettingandCleaningData\\NaturalGasAquisition.xlsx",sheetIndex=1,colIndex=colIndx,startRow=18, endRow=23, header=TRUE)
head(data)
data
dat <- read.xlsx(file="C:\\Users\\manzeno\\Documents\\GettingandCleaningData\\NaturalGasAquisition.xlsx",sheetIndex=1,colIndex=colIndx,startRow=18, endRow=23, header=TRUE)
dat
sum(dat$Zip*dat$Ext,na.rm=T)
sum(dat$Zip*dat$Ext,na.rm=TRUE)
sum(dat$Zip*dat$Ext)
sum(dat$Zip*dat$Ext,na.rm=TRUE)
install.packages("RMySQL")
R.home()
pollutantSet <- unique(NEI$Pollutant)
NEI <- readRDS("./exdata_data_NEI_data/summarySCC_PM25.rds")
SCC <- readRDS("./exdata_data_NEI_data/Source_Classification_Code.rds")
setwd("./ExploratoryAnalysis/exdata_data_NEI_data")
SCC <- readRDS("Source_Classification_Code.rds")
NEI <- readRDS("/summarySCC_PM25.rds")
NEI <- readRDS("summarySCC_PM25.rds")
aggData<-with (NEI,aggregate(NEI[,'Emissions'],by=list(year), sum, na.rm=TRUE))
names(aggData) <- c('Year', 'TotEmission')
png(filename='figure/plot1.png', width=480, height=480, units='px')
png(filename='figure/plot1.png', width=480, height=480, units='px')
plot(aggData, type="l", xlab="Year", ylab="Total PM2.5 Emmision From All Sources Between 1999-2008",
col="dark red", xaxt="n", main="Total Emissions (tons)")
#Plot the x-axis that contains the year
axis(1, at=as.integer(aggData$Year), las=1)
#Shut the graphic device
dev.off()
library(plyr)
aggDataPerYear <- ddply(NEI[NEI$fips == "24510",], c("year"),
function(df)sum(df$Emissions, na.rm=TRUE))
png(filename="figure/plot2.png", width=480, height=480)
#Plot the final aggregate data for Baltimore city from 1999-2008 to see if emission decreased
plot(aggDataPerYear$year, totalPerYear$V1, type="l", xlab="Year",
ylab="PM2.5 (tons)", main="PM2.5 Generated between years 1999-2008 in Baltimore City, MD")
#shutdown graphic device
dev.off()
aggDataPerYear <- ddply(NEI[NEI$fips == "24510",], c("year"),
function(df)sum(df$Emissions, na.rm=TRUE))
#Open graphics device
png(filename="figure/plot2.png", width=480, height=480)
#Plot the final aggregate data for Baltimore city from 1999-2008 to see if emission decreased
plot(aggDataPerYear$year, totalPerYear$V1, type="l", xlab="Year",
ylab="PM2.5 (tons)", main="PM2.5 Generated between years 1999-2008 in Baltimore City, MD")
#shutdown graphic device
dev.off()
Baltimore <- NEI[NEI$fips == "24510", ]
totalPM25ByYear <- tapply(Baltimore$Emissions, Baltimore$year, sum)
## Create plot
plot(totalPM25ByYear, x = rownames(totalPM25ByYear), type = "n", axes = FALSE,
ylab = expression("Total PM"[2.5] * " Emission (in tons)"), xlab = "Year",
main = expression("Total PM"[2.5] * " Emission in Baltimore (1999 - 2008)"))
points(totalPM25ByYear, x = rownames(totalPM25ByYear), pch = 16, col = "red")
lines(totalPM25ByYear, x = rownames(totalPM25ByYear), col = "blue")
axis(2)
axis(side = 1, at = seq(1999, 2008, by = 3))
box()
Baltimore <- NEI[NEI$fips == "24510", ]
totalPM25ByYear <- tapply(Baltimore$Emissions, Baltimore$year, sum,na.rm=TRUE)
## Create plot
plot(totalPM25ByYear, x = rownames(totalPM25ByYear), type = "n", axes = FALSE,
ylab = expression("Total PM"[2.5] * " Emission (in tons)"), xlab = "Year",
main = expression("Total PM"[2.5] * " Emission in Baltimore (1999 - 2008)"))
points(totalPM25ByYear, x = rownames(totalPM25ByYear), pch = 16, col = "red")
lines(totalPM25ByYear, x = rownames(totalPM25ByYear), col = "blue")
axis(2)
axis(side = 1, at = seq(1999, 2008, by = 3))
box()
Baltimore <- NEI[NEI$fips == "24510", ]
totalPM25ByYear <- tapply(Baltimore$Emissions, Baltimore$year, sum,na.rm=TRUE)
## Create plot
png(filename="figure/plot2.png", width=480, height=480)
plot(totalPM25ByYear, x = rownames(totalPM25ByYear), type = "n", axes = FALSE,
ylab = expression("Total PM"[2.5] * " Emission (in tons)"), xlab = "Year",
main = expression("Total PM"[2.5] * " Emission in Baltimore (1999 - 2008)"))
points(totalPM25ByYear, x = rownames(totalPM25ByYear), pch = 16, col = "red")
lines(totalPM25ByYear, x = rownames(totalPM25ByYear), col = "blue")
axis(2)
axis(side = 1, at = seq(1999, 2008, by = 3))
box()
dev.off()
library(plyr)
library(ggplot2)
totData <- ddply(NEI[NEI$fips == "24510",], c("year", "type"),
function(df)sum(df$Emissions, na.rm=TRUE))
#Open graphics device
png(filename="figure/plot3.png", width=480, height=480)
#Plot final data to see which of the 4 sources have seen decreased emissions
ggplot(data=totData, aes(x=year, y=V1, group=type, colour=type)) +
geom_line() +
xlab("Year") +
ylab("PM2.5 (tons)") +
ggtitle("Total PM2.5 Emissions (tons) Per Year by Source Type")
#shutdown device
dev.off()
Baltimore <- NEI[NEI$fips == "24510", ]
emissionsByTypeAndYear <- aggregate(Emissions ~ type * year, data = Baltimore,
FUN = sum)
## Load libraries required for plot
suppressWarnings(library(ggplot2))
suppressWarnings(library(grid))
## Setup ggplot with data frame
q <- qplot(y = Emissions, x = year, data = emissionsByTypeAndYear, color = type,
facets = . ~ type)
## Add layers
q + scale_x_continuous(breaks = seq(1999, 2008, 3)) + theme_bw() + geom_point(size = 3) +
geom_line() + labs(y = expression("Total " * PM[2.5] * " Emissions (in tons)")) +
labs(x = "Year") + labs(title = expression("Total " * PM[2.5] * " Emissions in Baltimore (1999 - 2008)")) +
theme(axis.text = element_text(size = 8), axis.title = element_text(size = 14),
panel.margin = unit(1, "lines"), plot.title = element_text(vjust = 2),
legend.title = element_text(size = 11)) + scale_colour_discrete(name = "Type")
## Calculate total PM2.5 emissions for each type by year in Baltimore
Baltimore <- NEI[NEI$fips == "24510", ]
emissionsByTypeAndYear <- aggregate(Emissions ~ type * year, data = Baltimore,
FUN = sum)
## Load libraries required for plot
## Setup ggplot with data frame
png(filename="figure/plot33.png", width=480, height=480)
q <- qplot(y = Emissions, x = year, data = emissionsByTypeAndYear, color = type,
facets = . ~ type)
## Add layers
q + scale_x_continuous(breaks = seq(1999, 2008, 3)) + theme_bw() + geom_point(size = 3) +
geom_line() + labs(y = expression("Total " * PM[2.5] * " Emissions (in tons)")) +
labs(x = "Year") + labs(title = expression("Total " * PM[2.5] * " Emissions in Baltimore (1999 - 2008)")) +
theme(axis.text = element_text(size = 8), axis.title = element_text(size = 14),
panel.margin = unit(1, "lines"), plot.title = element_text(vjust = 2),
legend.title = element_text(size = 11)) + scale_colour_discrete(name = "Type")
dev.off()
Baltimore <- NEI[NEI$fips == "24510", ]
emissionsByTypeAndYear <- aggregate(Emissions ~ type * year, data = Baltimore,
FUN = sum)
## Setup ggplot with data frame
png(filename="figure/plot3.png", width=480, height=480)
q <- qplot(y = Emissions, x = year, data = emissionsByTypeAndYear, color = type,
facets = . ~ type)
## Add layers
q + scale_x_continuous(breaks = seq(1999, 2008, 3)) + theme_bw() + geom_point(size = 3) +
geom_line() + labs(y = expression("Total " * PM[2.5] * " Emissions (in tons)")) +
labs(x = "Year") + labs(title = expression("Total " * PM[2.5] * " Emissions in Baltimore (1999 - 2008)")) +
theme(axis.text = element_text(size = 8), axis.title = element_text(size = 14),
panel.margin = unit(1, "lines"), plot.title = element_text(vjust = 2),
legend.title = element_text(size = 11)) + scale_colour_discrete(name = "Type")
dev.off()
CoalCombustionSources <- SCC[SCC$EI.Sector == "Fuel Comb - Comm/Institutional - Coal",
]["SCC"]
## Subset emissions due to coal combustion sources from 'NEI'
emissionFromCoal <- NEI[NEI$SCC %in% CoalCombustionSources$SCC, ]
## Calculate the emissions due to coal each year across United States
totalCoalEmissionsByYear <- tapply(emissionFromCoal$Emissions, emissionFromCoal$year,
sum)
## Create the plot
plot(totalCoalEmissionsByYear, x = rownames(totalCoalEmissionsByYear), type = "n",
axes = FALSE, ylab = expression("Coal Related PM"[2.5] * " Emission (in tons)"),
xlab = "Year", main = expression("Coal Related PM"[2.5] * " Emission across United States (1999 - 2008)"))
points(totalCoalEmissionsByYear, x = rownames(totalCoalEmissionsByYear), pch = 16,
col = "red")
lines(totalCoalEmissionsByYear, x = rownames(totalCoalEmissionsByYear), col = "blue")
axis(2)
axis(side = 1, at = seq(1999, 2008, by = 3))
box()
CoalCombustionSources <- SCC[SCC$EI.Sector == "Fuel Comb - Comm/Institutional - Coal",
]["SCC"]
## Subset emissions due to coal combustion sources from 'NEI'
emissionFromCoal <- NEI[NEI$SCC %in% CoalCombustionSources$SCC, ]
CoalCombustionSources <- SCC[SCC$EI.Sector == "Fuel Comb - Comm/Institutional - Coal",
]["SCC"]
## Subset emissions due to coal combustion sources from 'NEI'
emissionFromCoal <- NEI[NEI$SCC %in% CoalCombustionSources$SCC, ]
## Calculate the emissions due to coal each year across United States
totalCoalEmissionsByYear <- tapply(emissionFromCoal$Emissions, emissionFromCoal$year, sum)
## Create the plot
png(filename="figure/plot4.png", width=480, height=480)
plot(totalCoalEmissionsByYear, x = rownames(totalCoalEmissionsByYear), type = "n",
axes = FALSE, ylab = expression("Coal Related PM"[2.5] * " Emission (in tons)"),
xlab = "Year", main = expression("Coal Related PM"[2.5] * " Emission across United States (1999 - 2008)"))
points(totalCoalEmissionsByYear, x = rownames(totalCoalEmissionsByYear), pch = 16,
col = "red")
lines(totalCoalEmissionsByYear, x = rownames(totalCoalEmissionsByYear), col = "blue")
axis(2)
axis(side = 1, at = seq(1999, 2008, by = 3))
box()
dev.off()
motorVehicleSourceDesc <- unique(grep("Vehicles", SCC$EI.Sector, ignore.case = TRUE,value = TRUE))
motorVehicleSourceCodes <- SCC[SCC$EI.Sector %in% motorVehicleSourceDesc, ]["SCC"]
## Subset emissions due to motor vehicle sources in from 'NEI' for Baltimore
emissionFromMotorVehiclesInBaltimore <- NEI[NEI$SCC %in% motorVehicleSourceCodes$SCC & NEI$fips == "24510", ]
## Calculate the emissions due to motor vehicles in Baltimore for every year
totalMotorVehicleEmissionsByYear <- tapply(emissionFromMotorVehiclesInBaltimore$Emissions,
emissionFromMotorVehiclesInBaltimore$year, sum)
plot(totalMotorVehicleEmissionsByYear, x = rownames(totalMotorVehicleEmissionsByYear),
type = "n", axes = FALSE, ylab = expression("Motor Vehicle Related PM"[2.5] *
" Emission (in tons)"), xlab = "Year", main = expression("Motor Vehicle Related PM"[2.5] *
" Emission in Baltimore (1999 - 2008)"))
points(totalMotorVehicleEmissionsByYear, x = rownames(totalMotorVehicleEmissionsByYear), pch = 16, col = "red")
lines(totalMotorVehicleEmissionsByYear, x = rownames(totalMotorVehicleEmissionsByYear), col = "blue")
axis(2)
axis(side = 1, at = seq(1999, 2008, by = 3))
box()
motorVehicleSourceDesc <- unique(grep("Vehicles", SCC$EI.Sector, ignore.case = TRUE,value = TRUE))
motorVehicleSourceCodes <- SCC[SCC$EI.Sector %in% motorVehicleSourceDesc, ]["SCC"]
## Subset emissions due to motor vehicle sources in from 'NEI' for Baltimore
emissionFromMotorVehiclesInBaltimore <- NEI[NEI$SCC %in% motorVehicleSourceCodes$SCC & NEI$fips == "24510", ]
## Calculate the emissions due to motor vehicles in Baltimore for every year
totalMotorVehicleEmissionsByYear <- tapply(emissionFromMotorVehiclesInBaltimore$Emissions,
emissionFromMotorVehiclesInBaltimore$year, sum)
png(filename="figure/plot5.png", width=480, height=480)
plot(totalMotorVehicleEmissionsByYear, x = rownames(totalMotorVehicleEmissionsByYear),
type = "n", axes = FALSE, ylab = expression("Motor Vehicle Related PM"[2.5] *
" Emission (in tons)"), xlab = "Year", main = expression("Motor Vehicle Related PM"[2.5] *
" Emission in Baltimore (1999 - 2008)"))
points(totalMotorVehicleEmissionsByYear, x = rownames(totalMotorVehicleEmissionsByYear), pch = 16, col = "red")
lines(totalMotorVehicleEmissionsByYear, x = rownames(totalMotorVehicleEmissionsByYear), col = "blue")
axis(2)
axis(side = 1, at = seq(1999, 2008, by = 3))
box()
dev.off()
totalMotorVehicleEmissionsByYearAndByCounty <- aggregate(Emissions ~ fips *
year, data = emissionFromMotorVehicles, FUN = sum)
totalMotorVehicleEmissionsByYearAndByCounty$county <- ifelse(totalMotorVehicleEmissionsByYearAndByCounty$fips ==
"06037", "Los Angeles", "Baltimore")
## Load libraries required for plot
suppressWarnings(library(ggplot2))
suppressWarnings(library(grid))
## Setup ggplot with data frame
q <- qplot(y = Emissions, x = year, data = totalMotorVehicleEmissionsByYearAndByCounty,
color = county)
## Add layers
q + scale_x_continuous(breaks = seq(1999, 2008, 3)) + theme_bw() + geom_point(size = 3) +
geom_line() + labs(y = expression("Motor  Vehicle Related " * PM[2.5] *
" Emissions (in tons)")) + labs(x = "Year") + labs(title = expression("Motor  Vehicle Related " *
PM[2.5] * " Emissions in Baltimore & Los Angeles (1999 - 2008)")) + theme(axis.text = element_text(size = 8),
axis.title = element_text(size = 14), panel.margin = unit(1, "lines"), plot.title = element_text(vjust = 2,
hjust = 0.17, size = 12), legend.title = element_text(size = 11)) +
scale_colour_discrete(name = "County")
totalMotorVehicleEmissionsByYearAndByCounty <- aggregate(Emissions ~ fips *
year, data = emissionFromMotorVehicles, FUN = sum)
emissionFromMotorVehiclesInLosAngeles <- NEI[NEI$SCC %in% motorVehicleSourceCodes$SCC &
NEI$fips == "06037", ]
emissionFromMotorVehicles <- rbind(emissionFromMotorVehiclesInBaltimore, emissionFromMotorVehiclesInLosAngeles)
## Calculate the emissions due to motor vehicles in Baltimore and Los Angeles
## for every year
totalMotorVehicleEmissionsByYearAndByCounty <- aggregate(Emissions ~ fips *
year, data = emissionFromMotorVehicles, FUN = sum)
totalMotorVehicleEmissionsByYearAndByCounty$county <- ifelse(totalMotorVehicleEmissionsByYearAndByCounty$fips ==
"06037", "Los Angeles", "Baltimore")
## Load libraries required for plot
suppressWarnings(library(ggplot2))
suppressWarnings(library(grid))
## Setup ggplot with data frame
q <- qplot(y = Emissions, x = year, data = totalMotorVehicleEmissionsByYearAndByCounty,
color = county)
## Add layers
q + scale_x_continuous(breaks = seq(1999, 2008, 3)) + theme_bw() + geom_point(size = 3) +
geom_line() + labs(y = expression("Motor  Vehicle Related " * PM[2.5] *
" Emissions (in tons)")) + labs(x = "Year") + labs(title = expression("Motor  Vehicle Related " *
PM[2.5] * " Emissions in Baltimore & Los Angeles (1999 - 2008)")) + theme(axis.text = element_text(size = 8),
axis.title = element_text(size = 14), panel.margin = unit(1, "lines"), plot.title = element_text(vjust = 2,
hjust = 0.17, size = 12), legend.title = element_text(size = 11)) +
scale_colour_discrete(name = "County")
emissionFromMotorVehiclesInLosAngeles <- NEI[NEI$SCC %in% motorVehicleSourceCodes$SCC &
NEI$fips == "06037", ]
emissionFromMotorVehicles <- rbind(emissionFromMotorVehiclesInBaltimore, emissionFromMotorVehiclesInLosAngeles)
## Calculate the emissions due to motor vehicles in Baltimore and Los Angeles
## for every year
totalMotorVehicleEmissionsByYearAndByCounty <- aggregate(Emissions ~ fips *
year, data = emissionFromMotorVehicles, FUN = sum)
totalMotorVehicleEmissionsByYearAndByCounty$county <- ifelse(totalMotorVehicleEmissionsByYearAndByCounty$fips ==
"06037", "Los Angeles", "Baltimore")
## Load libraries required for plot
suppressWarnings(library(ggplot2))
suppressWarnings(library(grid))
## Setup ggplot with data frame
q <- qplot(y = Emissions, x = year, data = totalMotorVehicleEmissionsByYearAndByCounty,
color = county)
## Add layers
q + scale_x_continuous(breaks = seq(1999, 2008, 3)) + theme_bw() + geom_point(size = 3) +
geom_line() + labs(y = expression("Motor  Vehicle Related " * PM[2.5] *
" Emissions (in tons)")) + labs(x = "Year") + labs(title = expression("Motor  Vehicle Related " *
PM[2.5] * " Emissions in Baltimore & Los Angeles (1999 - 2008)")) + theme(axis.text = element_text(size = 8),
axis.title = element_text(size = 14), panel.margin = unit(1, "lines"), plot.title = element_text(vjust = 2,
hjust = 0.17, size = 12), legend.title = element_text(size = 11)) +
scale_colour_discrete(name = "County")
emissionFromMotorVehiclesInLosAngeles <- NEI[NEI$SCC %in% motorVehicleSourceCodes$SCC &
NEI$fips == "06037", ]
emissionFromMotorVehicles <- rbind(emissionFromMotorVehiclesInBaltimore, emissionFromMotorVehiclesInLosAngeles)
## Calculate the emissions due to motor vehicles in Baltimore and Los Angeles
## for every year
totalMotorVehicleEmissionsByYearAndByCounty <- aggregate(Emissions ~ fips *
year, data = emissionFromMotorVehicles, FUN = sum)
totalMotorVehicleEmissionsByYearAndByCounty$county <- ifelse(totalMotorVehicleEmissionsByYearAndByCounty$fips ==
"06037", "Los Angeles", "Baltimore")
png(filename="figure/plot6.png", width=480, height=480)
## Setup ggplot with data frame
q <- qplot(y = Emissions, x = year, data = totalMotorVehicleEmissionsByYearAndByCounty,
color = county)
## Add layers
q + scale_x_continuous(breaks = seq(1999, 2008, 3)) + theme_bw() + geom_point(size = 3) +
geom_line() + labs(y = expression("Motor  Vehicle Related " * PM[2.5] *
" Emissions (in tons)")) + labs(x = "Year") + labs(title = expression("Motor  Vehicle Related " *
PM[2.5] * " Emissions in Baltimore & Los Angeles (1999 - 2008)")) + theme(axis.text = element_text(size = 8),
axis.title = element_text(size = 14), panel.margin = unit(1, "lines"), plot.title = element_text(vjust = 2,
hjust = 0.17, size = 12), legend.title = element_text(size = 11)) +
scale_colour_discrete(name = "County")
dev.off()
